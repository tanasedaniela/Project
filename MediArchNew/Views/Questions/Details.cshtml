@model Data.Domain.Entities.Question
@inject UserManager<ApplicationUser> UserManager

@using MediArch.Services.Interfaces
@inject IApplicationUserService service

@{
    ViewData["Title"] = "Question - Details";
}
<div class="General_remake">
    <br />
    <h2>@ViewData["Title"]</h2>
    <hr />

    <div>
        <p><b>Created at:</b><br /> @Html.DisplayFor(model => model.CreatedDate)</p>
        
        <p><b>By:</b><br />@if (service.ApplicationUserExists(@Model.UserId.ToString()))
                           {
                               <a class="size_20" asp-action="Details" asp-controller="Account" asp-route-id="@Model.UserId"><img src="@service.GetProfilePictureLink(Model.UserId.ToString())" class="navbar_img"> @service.GetFullNameById(Model.UserId.ToString()) [@service.DetermineUserRole(Model.UserId.ToString())]</a>
                           }
                           else
                           {
                                <span>Unknown</span>
                           }
        </p>
        
        <p><b>Question:<br /></b> @Html.DisplayFor(model => model.Text)</p>
        
    </div>

    <br />
    <br />
    <div>
        @{string gui3 = Model.UserId.ToString(); }
        @if (User.IsInRole("Moderator") || User.IsInRole("Owner") || gui3 == UserManager.GetUserId(User))
        {
            <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
            <a asp-action="Delete" asp-route-id="@Model.Id"> | Delete | </a>
        }
        
        <a asp-action="QuestionsPaginated">Go back</a>
    </div>
</div>
