@model IEnumerable<Data.Domain.Entities.Question>

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@using Data.Domain.Interfaces
@inject IQuestionService question_service

@using MediArch.Services.Interfaces
@inject IApplicationUserService service

@{
    ViewData["Title"] = "Assistance";
    var no = -1;
}

<div class="General_remake">
    <br />
    <img src="~/images//Assistance.png" class="img_logos">

    @using (Html.BeginForm("Create", "Questions", new { uid = UserManager.GetUserId(User) }, FormMethod.Post, null, new { }))
    {
        <button class="button_remake">Create a New Question</button>
    }

    <div class="talbe_remake table_remake_td_smaller_td">
        <br />
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Question
                    </th>

                    <th>
                        Posted by
                    </th>
                    <th>
                        Role
                    </th>
                    <th>
                        On
                    </th>
                    <th>
                        Options
                    </th>
                </tr>
            </thead>
            <tbody>
                @{ var No_Q = 0;}
                @foreach (var item in Model)
                {
                    string gui3 = @item.UserId.ToString();
                    no++;
                    var NoModel = "NoModel" + no;

                    <tr id="Q_NR_@No_Q">
                        @{No_Q++;}
                        <td class="text_align_justify">

                            <p><a data-toggle="modal" data-target="#@NoModel" class="text_align_padding_25 cursor_pointer">@item.Text</a></p>

                            <div class="modal fade" id="@NoModel" role="dialog">
                                <div class="modal-dialog Centered width_65">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                            <h4 class="modal-title">Question: @item.Text</h4>
                                        </div>
                                        <div class="modal-body left_alg">
                                            <br />
                                            <h3 class="model_answer_Title">Answers:</h3>
                                            @foreach (var answer in question_service.GetAllAnswersForQuestion(item.Id))
                                            {
                                                <div class="btn-group dropright left_20">
                                                    @if (service.ApplicationUserExists(@answer.UserId.ToString()))
                                                    {
                                                        <a asp-action="Details" asp-controller="Account" asp-route-id="@answer.UserId"><b class="size_16">@service.GetFullUserNameById(answer.UserId.ToString()) [@service.DetermineUserRole(answer.UserId.ToString()).Replace("MEDIC", "DOCTOR").Replace("PACIENT", "PATIENT")]</b> <img src="@service.GetProfilePictureLink(answer.UserId.ToString())" class="navbar_img"></a>
                                                    }
                                                    else
                                                    {
                                                        <b>User not found</b>
                                                    }
                                                    (on @answer.Created_Date): <a class="btn dropdown-toggle dropdown-toggle-split flt_right border_4" data-toggle="dropdown">@answer.Text.CollapseAnswerText() </a>
                                                    <ul class="dropdown-menu special_dropright">
                                                        @{
                                                            string gui1 = answer.UserId.ToString();

                                                            if (User.IsInRole("Moderator") || User.IsInRole("Owner") || gui1 == UserManager.GetUserId(User))
                                                            {
                                                                <li><a asp-controller="Answers" asp-action="Edit" asp-route-id="@answer.Id">Edit</a></li>

                                                            }
                                                            <li><a asp-controller="Answers" asp-action="Details" asp-route-id="@answer.Id">Details</a></li>
                                                            if (User.IsInRole("Moderator") || User.IsInRole("Owner") || gui1 == UserManager.GetUserId(User))
                                                            {
                                                                <li><a asp-controller="Answers" asp-action="Delete" asp-route-id="@answer.Id">Delete</a></li>
                                                            }
                                                        }
                                                    </ul>
                                                </div>
                                                <br />


                                            }
                                            <div class="form-group">
                                                <br>
                                                @using (Html.BeginForm("CreateNewAnswer", "Answers", new { qid = item.Id, uid = UserManager.GetUserId(User), noPage = TempData["NoPage"] }, FormMethod.Post, null, new { }))
                                                {
                                                    <div class="Centered">
                                                        <textarea id="qtext" name="qtext" class="textarea_remake resize_medium height_bigger Answer_textarea" placeholder="Answer.."></textarea>
                                                    </div>
                                                    <br />
                                                    <div class="Centered">
                                                        <button class="button_remake" id="Submit_Answer">Submit Answer</button>
                                                    </div>
                                                }
                                            </div>
                                        </div>

                                    </div>
                                </div>

                            </div>
                        </td>
                        <td class="text_align_justify text_align_padding_45">
                            @if (service.ApplicationUserExists(@item.UserId.ToString()))
                            {

                                ApplicationUser user_that_put_the_q= service.GetUserById(item.UserId.ToString());

                                <p class="no_Text_Wraping">
                                    <a data-toggle="modal" data-target="#User_@user_that_put_the_q.Id" class="cursor_pointer"><b class="size_16"><img src="@service.GetProfilePictureLink(user_that_put_the_q.Id.ToString())" class="navbar_img"> @service.GetFullUserNameById(user_that_put_the_q.Id.ToString())</b></a>
                                </p>
                                <div class="modal fade" id="User_@user_that_put_the_q.Id" role="dialog">
                                    <div class="modal-dialog Centered width_65">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                                <h4 class="modal-title">About this user</h4>
                                            </div>
                                            <div class="modal-body">
                                                <br />
                                                <div class="container">
                                                    <div class="row">
                                                        <div class="col-8 left_align_doctors_spec">
                                                            <div class="details_Profile_Imagfe">
                                                                <img src="@service.GetProfilePictureLink(user_that_put_the_q.Id)" class="profile_img radius_5 padding_top_0">
                                                            </div>
                                                        </div>
                                                        <div class="col-4 right_align_doctors_spec">
                                                            @if (User.IsInRole("Owner") || User.IsInRole("Moderator"))
                                                            {
                                                                <p><b>Role:</b> @service.DetermineUserRole(user_that_put_the_q.Id.ToString()).Replace("MEDIC", "Doctor").Replace("PACIENT", "Patient").Replace("MODERATOR", "Moderator").Replace("OWNER", "Owner")</p>
                                                            }
                                                            <p><b>Full name:</b> @Html.DisplayFor(model => user_that_put_the_q.FirstName) @Html.DisplayFor(model => user_that_put_the_q.LastName)</p>
                                                            <p><b>@Html.DisplayNameFor(model => user_that_put_the_q.Email):</b> @Html.DisplayFor(model => user_that_put_the_q.Email)</p>
                                                            <p><b>Age:</b> @service.GetAgeOfUser(user_that_put_the_q.Id)</p>
                                                            <p><b>@Html.DisplayNameFor(model => user_that_put_the_q.BirthDate):</b> @Html.DisplayFor(model => user_that_put_the_q.BirthDate)</p>
                                                            @if (service.DetermineUserRole(user_that_put_the_q.Id).ToLower() == "Medic".ToLower())
                                                            {
                                                                <p><b>@Html.DisplayNameFor(model => user_that_put_the_q.Title):</b> @Html.DisplayFor(model => user_that_put_the_q.Title)</p>
                                                                <p><b>@Html.DisplayNameFor(model => user_that_put_the_q.CabinetAddress):</b> @Html.DisplayFor(model => user_that_put_the_q.CabinetAddress)</p>

                                                            }
                                                            @if (service.DetermineUserRole(user_that_put_the_q.Id).ToLower() != "pacient" || User.IsInRole("Owner") || User.IsInRole("Moderator") || User.IsInRole("Medic"))
                                                            {
                                                                <p><b>@Html.DisplayNameFor(model => user_that_put_the_q.PhoneNumber):</b> @Html.DisplayFor(model => user_that_put_the_q.PhoneNumber)</p>
                                                            }
                                                            @if (User.IsInRole("Owner") || User.IsInRole("Moderator"))
                                                            {
                                                                <p><b>Status:</b> @user_that_put_the_q.ActiveAccount.ToString().Replace("True", "Active").Replace("False", "Inactive")</p>
                                                            }
                                                        </div>
                                                    </div>
                                                    <br />
                                                    <a asp-action="Details" asp-controller="Account" asp-route-id="@item.UserId"><b>Details</b></a>
                                                    <br />
                                                    <br />
                                                </div>

                                            </div>
                                        </div>

                                    </div>
                                </div>
                            }
                            else
                            {
                                <span>User not found</span>
                            }
                        </td>
                        <td>
                            @if (service.ApplicationUserExists(item.UserId.ToString()))
                            {
                                @service.DetermineUserRole(item.UserId.ToString()).Replace("MEDIC", "DOCTOR").Replace("PACIENT","PATIENT")
                            }
                            else
                            {
                                <span>Unknown</span>
                            }
                        </td>
                        <td>
                            @item.CreatedDate
                        </td>

                        <td>
                            <div class="btn-group dropright">
                                <a class="btn dropdown-toggle dropdown-toggle-split flt_right" data-toggle="dropdown">Options </a>
                                <ul class="dropdown-menu special_dropright">
                                    @{
                                        
                                        if (User.IsInRole("Moderator") || User.IsInRole("Owner") || gui3 == UserManager.GetUserId(User))
                                        {
                                            <li><a asp-action="Edit" asp-route-id="@item.Id">Edit</a></li>
                                        }
                                        <li><a asp-action="Details" asp-route-id="@item.Id">Details</a></li>
                                        if (User.IsInRole("Moderator") || User.IsInRole("Owner") || gui3 == UserManager.GetUserId(User))
                                        {
                                            <li><a asp-action="Delete" asp-route-id="@item.Id">Delete</a></li>
                                        }
                                    }
                                </ul>
                            </div>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>

    <input type="hidden" id="CurrentIdPage" value="1" />
</div>
@if (question_service.GetNumberOfPagesForQuestions() > 1)
{
    <div class="Centered">
        <input type="button" id="No_Page_<<" value="<<" class="Pagination_Button"/>
        <input type="button" id="No_Page_<" value="<" class="Pagination_Button"/>
        <b id="...1" class="Pagination_Button">...</b>
        @for (int nrOfPage = 1; nrOfPage <= @question_service.GetNumberOfPagesForQuestions(); nrOfPage++)
        {
            <input type="button" id="No_Page_@nrOfPage" value="@nrOfPage" class="Pagination_Button"/>
        }
        <b id="...2" class="Pagination_Button">...</b>
        <input type="button" id="No_Page_>" value=">" class="Pagination_Button"/>
        <input type="button" id="No_Page_>>" value=">>" class="Pagination_Button"/>
    </div>
}

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
    
            var currentlink = window.location.href;
            var currentLinkSplit = currentlink.split('?');
            var actualPageNo = 0;
            if (currentLinkSplit.length == 1) {
                actualPageNo = 1;
            }
            else {
                actualPageNo = currentLinkSplit[1].split('=')[1];
            }

          
            document.getElementById("CurrentIdPage").value = actualPageNo;

            var MaxPages =@question_service.GetNumberOfPagesForQuestions();

            if (MaxPages > 1) {
                document.getElementById("...1").style.display = "none";

                if (MaxPages <= 4) {
                    document.getElementById("...2").style.display = "none";
                    document.getElementById("No_Page_>>").style.display = "none";
                    document.getElementById("No_Page_<<").style.display = "none";
                }
                else {
                    for (var i = 4; i <= MaxPages; i++)
                        document.getElementById("No_Page_" + i).style.display = "none";
                }

                if (MaxPages > 4) {
                    if (parseInt(actualPageNo) >= 3) {
                        document.getElementById("...1").style.display = "inline";
                    }

                    else {
                        document.getElementById("...1").style.display = "none";

                    }

                    if (parseInt(actualPageNo) >= MaxPages - 1) {
                        document.getElementById("...2").style.display = "none";

                    }
                    else {
                        document.getElementById("...2").style.display = "inline";
                    }



                    if (actualPageNo != 1 && actualPageNo != MaxPages) {
                        for (var i = 1; i <= MaxPages; i++) {
                            var id_string = "No_Page_".concat(i);
                            document.getElementById(id_string).style.display = "none";
                        }

                        for (var i = parseInt(actualPageNo) - 1; i <= parseInt(actualPageNo) + 1; i++) {
                            var id_string = "No_Page_".concat(i);
                            document.getElementById(id_string).style.display = "inline";
                        }
                    }
                    else {
                        if (actualPageNo == MaxPages) {
                            for (var i = 1; i <= MaxPages; i++) {

                                var id_string = "No_Page_".concat(i);
                                document.getElementById(id_string).style.display = "none";
                            }

                            for (var i = MaxPages - 2; i <= MaxPages; i++) {
                                var id_string = "No_Page_".concat(i);
                                document.getElementById(id_string).style.display = "inline";
                            }

                        }
                    }
                }
            }

            $('[id*=No_Page_]').click(function () {
                
                var pageNumber = this.id.substring(8);
                if (pageNumber == "<<") {
                    pageNumber = 1;

                    for (var i = 1; i <= MaxPages; i++) {
                        var id_string = "No_Page_".concat(i);
                        document.getElementById(id_string).style.display = "none";
                    }

                    for (var i = 1; i <= 3; i++) {
                        var id_string = "No_Page_".concat(i);
                        document.getElementById(id_string).style.display = "inline";
                    }

                }

                if (pageNumber == ">>") {
                    pageNumber = MaxPages;
                    for (var i = 1; i <= pageNumber; i++) {
                        var id_string = "No_Page_".concat(i);
                        document.getElementById(id_string).style.display = "none";
                    }

                    for (var i = pageNumber - 2; i <= pageNumber; i++) {
                        var id_string = "No_Page_".concat(i);
                        document.getElementById(id_string).style.display = "inline";
                    }
                }

                if (pageNumber == "<") {
                    pageNumber = parseInt($('#CurrentIdPage').val().valueOf());
                    pageNumber = pageNumber - 1;
                    if (pageNumber < 1) {
                        pageNumber = 1;

                    }
                }
                if (pageNumber == ">") {
                    pageNumber = parseInt($('#CurrentIdPage').val());
                    pageNumber = pageNumber + 1;
                    if (pageNumber > MaxPages) {
                        pageNumber = MaxPages;

                    }
                }
                
                var currentlink = window.location.href;
                var spl = currentlink.split("/");
                //alert(spl[2])
                var RedirectPage = 'https://'+spl[2]+'@Url.Action("QuestionsPaginated", "Questions")' + '?NoPage=' + pageNumber
                //console.log(RedirectPage)

              
                location.replace(RedirectPage);
              
            });
        });

    </script>
